#!/usr/bin/python2.7
# -*- coding: utf-8 -*-

import sys
from string import uppercase,lowercase

ranges = {
  "MATHEMATICAL BOLD" : 0x1d400,
  "MATHEMATICAL ITALIC" : 0x1d434,
  "MATHEMATICAL BOLD ITALIC" : 0x1d468,
  "MATHEMATICAL SCRIPT" : 0x1d49c,
  "MATHEMATICAL BOLD SCRIPT" : 0x1d4d0,
  "MATHEMATICAL FRAKTUR" : 0x1d504,
  "MATHEMATICAL DOUBLE-STRUCK" : 0x1d538,
  "MATHEMATICAL BOLD FRAKTUR" : 0x1d56c,
  "MATHEMATICAL SANS-SERIF" : 0x1d5a0,
  "MATHEMATICAL SANS-SERIF BOLD" : 0x1d5d4,
  "MATHEMATICAL SANS-SERIF ITALIC" : 0x1d608,
  "MATHEMATICAL SANS-SERIF BOLD ITALIC" : 0x1d63c,
  "MATHEMATICAL MONOSPACE" : 0x1d670,
}

capslock = {
  "FULLWIDTH LATIN" : 0xff21,
  "REGIONAL INDICATOR SYMBOL" : 0x1f1e6,
  "PARENTHESIZED LATIN CAPITAL" : 0x1f110,
  "SQUARED LATIN CAPITAL" : 0x1f130,
  "NEGATIVE CIRCLED LATIN CAPITAL" : 0x1f150,
  "NEGATIVE SQUARED LATIN CAPITAL" : 0x1f170,
}

turned = "ɐqɔpǝɟƃɥıɾʞʃɯuodbɹsʇnʌʍxʎz"

def num(i,alphabet):
  try:
    return alphabet.index(i)
  except:
    return -1

def fullwidth(s):
  r = bytes()
  for letter in s:
    val = ord(letter)
    if val > 0x21 and val < 0x7f:
      r += unichr(0xfee0+val)
    elif val == 0x20:
      r += unichr(0x3000)
    else:
      r += chr(val)
  return r

def listit(s,array,alphabet):
  r = bytes()
  for name in array.keys():
    #r += name.ljust(40)
    r += ''.join([unichr(array[name]+num(i,alphabet)) for i in s])
    r += "\n"
  return r

def transcrit(i,alp,reference):
  r = ''
  for letter in i:
    if letter in reference:
      r += alp.decode('utf-8')[reference.index(letter)]
    else:
      r += letter
  return r


if __name__ == "__main__":
  if len(sys.argv) == 1:
    s = sys.stdin.read()
  else:
    s = ' '.join(sys.argv[1:])

  print fullwidth(s)
  print transcrit(s.lower(),turned,lowercase)
  print listit(s,ranges,uppercase+lowercase)
  print listit(s.upper(),capslock,uppercase)
